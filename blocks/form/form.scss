@use '../../styles/settings' as *;
@use '../../styles/forms' as *;

// Fieldset reset
fieldset {
  padding: 0;
  margin: 0;
}

// Hide debug output
main .form pre {
  display: none;
}

form output {
  display: block;
  font-weight: 700;
  font-size: 1.625rem;
}

form:not(.edit-mode) [data-visible='false'] {
  display: none !important;
}

// Only show first form step initially
main .form > div:not(:first-child) {
  display: none;
}

// Top navigation panel layout
.panel-wrapper.field-top-nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: $spacing-500 $spacing-400;
  max-height: 98px;
  height: 100%;

  .image-wrapper picture {
    max-width: 150px;

    @include media('desktop') {
      max-width: 300px;
    }
  }
}

// Input overrides
main .form input:disabled,
main .form textarea:disabled,
main .form select:disabled,
main .form button:disabled {
  background-color: var(--form-input-disable-color);
}

main .form input[type='file'] {
  border: none;
  padding-inline-start: 0;
  background: unset;
  color: unset;
}

main .form textarea {
  min-height: 100px;
  font-family: $font-family;
  font-size: $size-font-body-default;
}

main .form label.required::after {
  content: '*';
  color: var(--form-label-color);
  padding-inline-start: 5px;
}

// File input styling
input::file-selector-button {
  color: var(--form-upload-color);
  background: var(--form-upload-background-color);
  font-size: var(--form-upload-font-size);
  text-align: center;
}

// Buttons
main .form button {
  @extend %button--primary;
}

main form .file-wrapper > button {
  display: flex;
}

main .submit-wrapper {
  button {
    @extend %button--hollow;
    display: block;
    margin-left: auto;
  }
}

// File upload drag and drop area
main .file-wrapper.decorated input[type='file'] {
  display: none;
}

main .file-wrapper .field-dropregion {
  background: rgb(0 0 0 / 2%);
  border: 1px dashed var(--form-input-border-color);
  border-radius: 4px;
  margin: 11px 0 8px;
  padding: 32px;
  text-align: center;
}

// Cards input (radio/checkbox)
main .form form fieldset.cards > .radio-wrapper > input,
main .form form fieldset.cards > .checkbox-wrapper > input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

main .form .form-image-wrapper img {
  max-width: 100%;
  height: auto;
}

main .form form fieldset.cards > .radio-wrapper > label > img,
main .form form fieldset.cards > .checkbox-wrapper > label > img {
  max-width: 18px;
  max-height: 18px;
  object-fit: contain;
}

// Repeatable field actions
main .form form .repeat-actions {
  grid-column: span 12;
  order: 2;
}

main .form form .item-remove,
main .form form .item-add {
  overflow: unset;
}

main .form form .item-remove {
  justify-self: end;
  grid-column: span 12;
  order: 1;
}

main .form form div[data-variant='addRemoveButtons'] .item-add,
main .form form div[data-variant='addRemoveButtons'] .item-remove {
  display: block;
}

// File list display
main .form .file-description {
  display: flex;
  gap: 20px;
  align-items: center;
  margin-top: 5px;
}

main .form .file-description .file-description-name {
  cursor: pointer;
  text-decoration: underline;
  flex: 1;
}

main .file-wrapper .file-description button {
  --form-button-padding: 15px;

  width: 12px;
  height: 12px;
  border: none;
  text-align: center;
  background: var(--border-color);
  cursor: pointer;
  position: relative;
  border-radius: 3px;

  &::after {
    content: 'X';
    position: absolute;
    top: 50%;
    left: 50%;
    color: var(--background-color-primary);
    transform: translate(-50%, -50%);
  }
}

main .form .button-wrapper button[disabled] {
  cursor: auto;

  &:hover {
    border: 3px solid var(--button-secondary-color);
    color: var(--button-secondary-color);
    background-color: transparent;
  }
}

// Form layout: repeat wrapper
main .form form .repeat-wrapper {
  display: grid;
  grid-template-columns: repeat(var(--form-columns), minmax(0, 1fr));
  gap: var(--form-field-vert-gap) var(--form-field-horz-gap);
}

// Messages
main .form .form-message.success-message {
  color: #0f5132;
  background-color: #d1e7dd;
  border-color: #badbcc;
  flex: 100%;
  grid-column: span 12;
  padding: 10px;
}

main .form .form-message.error-message {
  color: #842029;
  background-color: #f8d7da;
  border-color: #f5c2c7;
  flex: 100%;
  grid-column: span 12;
  padding: 10px;
}

// Drag area in file wrapper
main .form .file-wrapper .file-drag-area {
  border: 1px dashed var(--border-color);
  border-radius: 5px;
  padding: 10px 5px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  justify-content: center;
  align-items: center;
}

// Captcha
main .form form:not(.edit-mode) .captcha-wrapper {
  display: none;
}

// Inline group descriptions
main .form form .radio-group-wrapper.horizontal .field-description,
main .form form .checkbox-group-wrapper.horizontal .field-description {
  width: 100%;
  order: 1;
  margin-top: 0.5rem;
}

// Responsive adjustments for mobile
@media (width <= 599px) {
  :root {
    --form-field-horz-gap: 10px;
  }

  main .form form .wizard {
    .wizard-menu-items {
      gap: 20px;
    }

    margin: 0;
  }
}

// SEP-specific ordering
.checkbox-wrapper > input {
  order: 2;
}

.checkbox-wrapper > label {
  order: 1;
}
