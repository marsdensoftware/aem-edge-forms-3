@use '../../../../styles/settings' as *;

.wizard .wizard-menu-items {
  display: none !important;
}

.wizard--bg-dark {
  .wizard {
    min-height: 80vh;
    background: linear-gradient(
      135deg,
      $color-accent 25%,
      $color-primary-navy 100%
    );
  }
}

.wizard--bg-light {
  .wizard {
    min-height: 80vh;
    background: linear-gradient(
      135deg,
      $color-shade-blue-10 25%,
      $color-shade-blue-25 100%
    );
  }
}

.wizard {
  background: linear-gradient(
    135deg,
    $color-accent 25%,
    $color-primary-navy 100%
  );

  .current-wizard-step {
    @include media('tablet') {
      @media (min-height: 921px) {
        min-height: calc(100vh - $nav-height - $footer-height);
        height: 100%;
      }
    }
  }

  // First screen JSP
  .current-wizard-step:is([data-index='0'], [data-index='1']) {
    padding-top: $spacing-600;
    // Extra space at the bottom
    // Because of fix nav
    padding-bottom: 120px;

    @include media('tablet') {
      @media (min-height: 921px) {
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding-top: 96px;
        padding-bottom: 128px;
      }
    }
  }

  // Exclude current component being styled for Bootstrap
  // data-index="0" = first screen
  .current-wizard-step:not([data-index='0'], [data-index='1']) {
    @include media('desktop') {
      padding: $spacing-600 0;
      margin: 32px auto;
      width: 100%;
      max-width: 1038px;
    }
  }

  > legend.field-label,
  .wizard-menu-items {
    display: none;
  }

  .wizard-menu-items {
    display: flex;
    gap: 50px;
    flex-wrap: wrap;
    list-style: none;
    padding: 0;
    margin: 0;
    font-weight: var(--form-fieldset-legend-font-weight);
    font-size: var(--form-fieldset-legend-font-size);
    color: var(--form-fieldset-legend-color);
    padding-bottom: var(--form-wizard-padding);
    grid-column: span 12;
  }

  .wizard-menu-item {
    counter-increment: wizard-step-counter;

    &::before {
      content: counter(wizard-step-counter);
      border: 2px solid var(--form-wizard-number-color);
      color: var(--form-wizard-number-color);
      border-radius: 50%;
      width: 35px;
      height: 35px;
      margin-right: 10px;
      text-align: center;
      line-height: 2;
      display: inline-block;
    }
  }

  .wizard-menu-active-item::before {
    border: 2px solid var(--form-wizard-number-color);
    background: var(--form-wizard-number-color);
    color: var(--background-color-primary);
    font-weight: 600;
  }

  &.left {
    display: flex;

    .wizard-menu-items {
      flex-direction: column;
      width: 300px;
    }
  }
}

// Utility/hiding logic
main .form form .wizard > fieldset > legend {
  display: none;
}

main .form form .wizard > fieldset:not(.current-wizard-step) {
  display: none;
}

main .form form .wizard .wizard-button-wrapper .field-wrapper {
  flex: unset;
}

main
  form
  .wizard
  > .current-wizard-step.panel-wrapper:first-of-type
  ~ .wizard-button-wrapper
  > .wizard-button-prev,
main
  form
  .wizard
  > .current-wizard-step.panel-wrapper:last-of-type
  ~ .wizard-button-wrapper
  > .wizard-button-next {
  display: none;
}
