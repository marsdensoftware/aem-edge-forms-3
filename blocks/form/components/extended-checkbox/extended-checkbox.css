/*
 * Styles for the Extended Checkbox component.
 */

.field-modal-checkbox-container .field-main-checkbox {
    align-items: center;
    border-radius: 8px;
    border: 2px solid #a1b3c8;
}

/* Target labels that have a description to apply flex layout. */
.field-main-checkbox {
  display: flex;
  flex-direction: column; /* Stacks the text and description vertically */
  align-items: flex-start; /* Aligns items to the start of the cross axis */
  gap: 4px; /* Adds a small space between the label text and description */
}

.field-main-checkbox label,textarea {
  border: 0;
  background: transparent;
}

.field-main-checkbox hr {
  width: 90%;
}


/* Style the main text span of the checkbox label. */
.field-main-checkbox .field-label .text {
  font-weight: normal;
}

/* Style the new description span. */
.field-main-checkbox .field-label .desc {
  font-size: var(--body-font-size-s); /* Use a smaller font size for the description */
  color: var(--text-color-secondary, #555); /* Use a secondary text color */
  line-height: 1.4;
}

/* In extended-checkbox.css */

/* Use flexbox on the label for easy alignment of the icon and text */
.extended-checkbox .field-label {
  display: inline-flex;
  align-items: center;
  gap: 8px; /* Adjust the space between the icon and the label text */
}

/*
 * This creates the "icon holder" for any checkbox that has an icon class.
 * The [class*="..."] selector is a flexible way to target any element
 * whose class contains "extended-checkbox--icon-".
 */
[class*="extended-checkbox--icon-"] .field-label::before {
  content: ''; /* This is required for a pseudo-element to be displayed */
  display: inline-block;
  width: 24px;  /* Example: Set your desired icon width */
  height: 24px; /* Example: Set your desired icon height */
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  flex-shrink: 0; /* Prevents the icon from shrinking if the label text is long */
}

/*
 * --- Define each specific icon ---
 * For each possible `iconName` you might configure in the authoring dialog,
 * you add a corresponding CSS rule here to set the background image.
 */

/* Example for when an author enters 'user' as the iconName */
.extended-checkbox--icon-user .field-label::before {
  background-image: url('/icons/user.svg'); /* Path to your user icon */
}

/* Example for when an author enters 'skill' as the iconName */
.extended-checkbox--icon-skill .field-label::before {
  background-image: url('/icons/skill.svg'); /* Path to your skill icon */
}

/* Add more rules for other icons as needed */
.extended-checkbox--icon-work .field-label::before {
  background-image: url('/icons/work.svg');
}

.extended-checkbox--icon-car-off .field-label::before {
  background-image: url('../../../../icons/icon-car-off.svg');
}
