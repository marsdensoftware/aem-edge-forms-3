@use '../../../../styles/settings' as *;

/* ---------------------------
   Toast styles
---------------------------- */

// Toasts
$text-toast-primary: $text-dark-primary;
$text-toast-secondary: $text-secondary;
$text-toast-warning: $color-feedback-orange;
$text-toast-error: $color-feedback-red;
$text-toast-info: $color-feedback-green;

// Sticky nav height (fallback if not provided elsewhere)
$sticky-nav-height: 5.25rem;

/* Icons */
$icon-info: '/icons/icon-toast-green-tick.svg';
$icon-warning: '/icons/icon-toast-red-error.svg';
$icon-error: '/icons/icon-toast-red-error.svg';

/* =========================================================
   Container â€” top-right, offset below sticky nav
========================================================= */
.toast-container {
  position: fixed;
  top: calc(env(safe-area-inset-top, 0) + 123px + 48px);
  right: $spacing-400;
  left: auto;
  bottom: auto;
  transform: none;

  /* Visual chrome */
  @include elevation-1;
  border-radius: var(--Corner-radius-Mid, 8px);
  border-left: 8px solid $text-toast-info; // default = success/info
  background: $color-white;
  color: $text-toast-primary;

  padding: 0.625rem 1.25rem;
  z-index: 10000;
  display: flex;
  align-items: center;
  gap: $spacing-300;
  white-space: nowrap;
  pointer-events: auto;

  /* fieldset resets */
  margin: 0;
  border: 0;
  min-width: 0;

  /* Variant sync */
  &:has(.toast--warning) {
    border-left-color: $text-toast-warning;
  }
  &:has(.toast--error) {
    border-left-color: $text-toast-error;
  }
  &:has(.toast--info) {
    border-left-color: $text-toast-info;
  }
}

/* Keep the inner toast layout-only (no extra chrome) */
.toast {
  background: transparent;
  border: 0;
  box-shadow: none;
  padding: 0;
  margin: 0;

  display: grid;
  grid-template-columns: 24px 1fr auto;
  align-items: start;
  column-gap: $spacing-300;
}

/* Icon */
.toast__icon {
  grid-column: 1;
  width: 24px;
  height: 24px;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;

  /* Default = info */
  background-image: url(#{$icon-info});
}

.toast--warning .toast__icon { background-image: url(#{$icon-warning}); }
.toast--error   .toast__icon { background-image: url(#{$icon-error}); }

/* Message container */
.toast__message-container {
  grid-column: 2;
  display: grid;
  gap: 2px;
  min-width: 0; /* allow text to truncate */
}

/* Title */
.toast__title,
.toast > .field-label {
  @include heading-level-6;
  margin: 0;
  color: $text-toast-primary;
  font-weight: $font-weight-regular;
  font-size: $size-font-toast-title;
  line-height: 1.2;
}
.toast__title:empty { display: none; }
.toast > .field-label:empty { display: none; }

/* Description */
.toast__description,
.toast > .field-description {
  margin: 0;
  color: $text-toast-secondary;
  font-size: $size-font-toast-desc;
  line-height: 1.35;
}

/* Close button */
.toast__close-button {
  grid-column: 3;
  align-self: start;
  appearance: none;
  background: transparent;
  border: 0;
  color: $text-toast-primary;
  font-size: 24px;
  line-height: 1;
  cursor: pointer;
  padding: 2px 6px;
  margin-left: $spacing-200;

  &:hover,
  &:focus-visible {
    color: $text-toast-primary;
    outline: none;
  }
}

/* Accessibility nicety */
.toast [aria-live='polite'] {}

/* Small screens */
@media (max-width: 480px) {
  .toast-container {
    top: calc(env(safe-area-inset-top, 0) + #{$sticky-nav-height} + #{$spacing-200});
    right: $spacing-300;
    padding: 0.5rem 0.875rem;
    gap: $spacing-200;
  }
  .toast {
    grid-template-columns: 20px 1fr auto;
    column-gap: $spacing-200;
  }
  .toast__icon { width: 20px; height: 20px; }
}

/* Optional: truncate overly long single-line messages gracefully */
.toast__message-container > * {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
