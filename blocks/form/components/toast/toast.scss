@use '../../../../styles/settings' as *;

/* ---------------------------
   Toast styles
---------------------------- */

/* Tokens (from your system) */
$text-toast-primary: $text-dark-primary;
$text-toast-secondary: $text-secondary;
$text-toast-warning: $color-feedback-orange;
$text-toast-error: $color-feedback-red;
$text-toast-info: $color-feedback-green;

/* Sticky nav height (fallback/tokenize if you have one) */
$sticky-nav-height: 5.25rem;

/* Icons */
$icon-info: '/icons/icon-toast-green-tick.svg';
$icon-warning: '/icons/icon-toast-red-error.svg';
$icon-error: '/icons/icon-toast-red-error.svg';
/* =========================================================
   Container — layout only (stack + consistent width)
========================================================= */
.toast-container {
  position: fixed;
  top: calc(env(safe-area-inset-top, 0) + 123px + 48px);
  right: 32px;
  left: auto;
  bottom: auto;
  transform: none;

  /* Stack toasts vertically and align edges */
  display: flex;
  flex-direction: column;
  align-items: stretch;         /* make children take container width */
  gap: $spacing-300;

  /* Pick a clean card width and keep it responsive */
  width: 360px;
  max-width: min(360px, calc(100vw - 32px - 16px)); /* viewport minus margins */

  /* pointer/fieldset reset */
  pointer-events: none; /* so clicks pass through unless on toast itself */
  margin: 0;
  border: 0;
  min-width: 0;
  z-index: 10000;
}

/* =========================================================
   Toast card — chrome lives here (uniform width)
========================================================= */
.toast {
  pointer-events: auto;
  width: 100%;                          /* align left edges perfectly */
  @include elevation-1;
  background: $color-white;
  color: $text-toast-primary;
  border-radius: var(--Corner-radius-Mid, 8px);
  border-left: 8px solid $text-toast-info; /* default = info/success */
  padding: 0.625rem 1.25rem;

  /* Layout: icon | message | close */
  display: grid;
  grid-template-columns: 24px 1fr auto;
  align-items: start;
  column-gap: $spacing-300;

  &.toast--warning { border-left-color: $text-toast-warning; }
  &.toast--error   { border-left-color: $text-toast-error;   }
  &.toast--info    { border-left-color: $text-toast-info;    }
}

/* Icon */
.toast__icon {
  grid-column: 1;
  width: 24px; height: 24px;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  background-image: url(#{$icon-info});
}
.toast--warning .toast__icon { background-image: url(#{$icon-warning}); }
.toast--error   .toast__icon { background-image: url(#{$icon-error}); }

/* Message + typography (unchanged) */
.toast__message-container { grid-column: 2; display: grid; gap: 2px; min-width: 0; }
.toast__title,
.toast > .field-label {
  @include heading-level-6;
  margin: 0;
  color: $text-toast-primary;
  font-weight: $font-weight-regular;
  font-size: $size-font-toast-title;
  line-height: 1.2;
}
.toast__title:empty { display: none; }
.toast > .field-label:empty { display: none; }

.toast__description,
.toast > .field-description {
  margin: 0;
  color: $text-toast-secondary;
  font-size: $size-font-toast-desc;
  line-height: 1.35;
  width:540px;
}

/* Close button */
.toast__close-button {
  grid-column: 3;
  align-self: start;
  appearance: none;
  background: transparent;
  border: 0;
  color: $text-toast-primary;
  font-size: 24px;
  line-height: 1;
  cursor: pointer;
  padding: 2px 6px;
  margin-left: $spacing-200;

  &:hover,
  &:focus-visible { color: $text-toast-primary; outline: none; }
}

/* Mobile: full-bleed-ish with consistent edges */
@media (max-width: 480px) {
  .toast-container {
    top: calc(env(safe-area-inset-top, 0) + 123px + 24px);
    right: 16px;
    width: auto;
    max-width: calc(100vw - 16px - 16px);
    gap: $spacing-200;
  }
  .toast {
    grid-template-columns: 20px 1fr auto;
    column-gap: $spacing-200;
  }
  .toast__icon { width: 20px; height: 20px; }
}

/* Truncation (unchanged) */
.toast__message-container > * {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
